package questao5;

import java.util.ArrayList;

public class BaseDados {
    private static ArrayList<Usuario> usuarios;

    public void createBase() {
        usuarios = new ArrayList<Usuario>();
        inicializarBase();
    }
    
    private static void inicializarBase() {
    	Telefone telefone1 = new Telefone(55, 81, 999990000);
    	Endereco endereco1 = new Endereco("Av. dos Cactos", 100, "Cactolândia", 56970000, "Serra Talhada", "PE", "");
    	Usuario usuario1 = new Usuario("José Santos", "941.860.760-30", "josesantos@gmail.com", "jose123", telefone1, endereco1);
    	
    	Telefone telefone2 = new Telefone(55, 81, 999990001);
    	Endereco endereco2 = new Endereco("Rua Flores", 50, "Encruzilhada", 52041430, "Recife", "PE", "");
    	Usuario usuario2 = new Usuario("Maria Silva", "575.373.110-4830", "mariasilva@gmail.com", "mariamaria", telefone2, endereco2);

    	Telefone telefone3 = new Telefone(55, 87, 999990002); 
    	Endereco endereco3 = new Endereco("Rua Mamão Doce", 100, "Saudade", 56870000,"Triunfo", "PE", "");
    	Usuario usuario3 = new Usuario("João Mamão", "080.075.880-35", "jmamao@gmail.com","mamãoDocE", telefone3, endereco3);

    }

	public Usuario buscarUsuario(Usuario usuario) {
    	Usuario foundClient;
    	for (Usuario currentUsuario: usuarios) {
    		if (currentUsuario.equals(usuario)) {
    			foundClient = new Usuario(usuario.getNome(), usuario.getCpf(), usuario.getEmail(), usuario.getSenha(), 
    						 		usuario.getTelefone().getFirst(), usuario.getEndereco());
    			return foundClient;
    		}	
    	}
    	return null;
    	
    }
    
    public Usuario buscarUsuario(String cpf) {
    	for (Usuario currentClient: usuarios) {
    		if (currentClient.getCpf().equals(cpf)) return currentClient;
    		
    	}
    	return null;
    }
    
    public boolean adicionarUsuario(Usuario usuario) {
    	if (!usuario.getCpf().equals(buscarUsuario(usuario.getCpf()).getCpf()) && ValidadorCPF.validarCPF(usuario.getCpf())){
    		if (usuarios.add(usuario)) return true;
    	}
    	return false;
    	
    }
    
    public boolean removeUsuario(String cpf) {
    	if (usuarios.remove(buscarUsuario(cpf))) {
    		return true;
    	}
    	return false;
    }
    
    public boolean atualizarCliente(String cpf, Usuario usuario) {
        Usuario usuarioExistente = buscarUsuario(cpf);

        if (usuarioExistente != null && usuarioExistente.getCpf().equals(usuario.getCpf())) {
            int index = usuarios.indexOf(usuarioExistente);
            usuarios.set(index, usuario);
            return true;
        }

        return false;
    }

    
    public static ArrayList<Usuario> getUsuario() {
    	return usuarios;
    }
    
}

